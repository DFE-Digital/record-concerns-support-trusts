name: Run UI automation

on:
  push:
    branches:
    - develop
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  run-ui-automation:
    runs-on: ubuntu-latest
    environment: dev

    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:2017-latest
        ports:
        - 1433:1433
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "change_this_password"

      redis:
        image: redis:alpine
        ports:
        - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Install certificates
        run: |
          sudo apt install libnss3-tools
          sh ConcernsCaseWork/setup-certs/ubuntu-create-dotnet-devcert.sh -s

      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Restore dependencies
        run: dotnet restore ConcernsCaseWork/ConcernsCaseWork.sln

      - name: Build application
        run: dotnet build ConcernsCaseWork/ConcernsCaseWork.sln

      - name: Install Dotnet EF
        run: dotnet tool install --global dotnet-ef
          
      - name: Run Database migrations
        working-directory: ./ConcernsCaseWork/ConcernsCaseWork.Data
        run: dotnet ef database update --connection "Server=localhost,1433;Database=sip;User Id=sa;Password=P1swrd!$;TrustServerCertificate=True"

      - name: Configure application
        working-directory: ./ConcernsCaseWork/ConcernsCaseWork
        run: |
          dotnet user-secrets set "VCAP_SERVICES" "${{ secrets.VCAP_SERVICES }}"
          dotnet user-secrets set "trams:api_key" "${{ secrets.TRAMS_API_KEY }}"
          dotnet user-secrets set "trams:api_endpoint" "${{ secrets.TRAMS_API_ENDPOINT }}"
          dotnet user-secrets set "ConnectionStrings:DefaultConnection" "Server=localhost,1433;Database=sip;User Id=sa;Password=P1swrd!$;TrustServerCertificate=True"
          dotnet user-secrets set "ConcernsCaseworkApi:ApiKeys" "${{ secrets.TRAMS_API_KEY }}"
          dotnet user-secrets set "ConcernsCasework:ApiKey" "${{ secrets.TRAMS_API_KEY }}"
          dotnet user-secrets set "ConcernsCasework:ApiEndpoint" "https://localhost:8001"
          dotnet user-secrets set "AzureAd:ClientId" "${{ secrets.AZURE_AD_CLIENT_ID }}"
          dotnet user-secrets set "AzureAd:TenantId" "${{ secrets.AZURE_AD_TENANT_ID }}"
          dotnet user-secrets set "AzureAd:ClientSecret" "${{ secrets.AZURE_AD_CLIENT_SECRET }}"

      - name: Install Website
        working-directory: ./ConcernsCaseWork/ConcernsCaseWork/wwwroot
        run: | 
          npm install
          npm run build

      - name: Run application
        run: dotnet run --project ConcernsCaseWork/ConcernsCaseWork/ConcernsCaseWork.csproj &

      - name: Setup and run the cypress tests
        working-directory: ./ConcernsCaseWork/ConcernsCaseWork.CypressTests
        run: | 
          npm install
          npm run cy:run -- --env url="https://localhost:8001"
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
           name: screenshots
           path: ConcernsCaseWork/ConcernsCaseWork.CypressTests/cypress/screenshots