name: Push to ACR

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Choose an environment to deploy to"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}

env:
  DOCKER_IMAGE: amsd-app
  NODE_VERSION: 16.x

jobs:
  set-env:
    name: Determine environment
    runs-on: ubuntu-22.04
    outputs:
      environment: ${{ steps.var.outputs.environment }}
      branch: ${{ steps.var.outputs.branch }}
      release: ${{ steps.var.outputs.release }}
      checked-out-sha: ${{ steps.var.outputs.checked-out-sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - id: var
        run: |
          GIT_REF=${{ github.ref }}
          GIT_BRANCH=${GIT_REF##*/}
          INPUT=${{ github.event.inputs.environment }}
          ENVIRONMENT=${INPUT:-"dev"}
          RELEASE=${ENVIRONMENT,,}-`date +%Y-%m-%d`.${{ github.run_number }}
          CHECKED_OUT_SHA="$(git log -1 '--format=format:%H')"
          echo "environment=${ENVIRONMENT,,}" >> $GITHUB_OUTPUT
          echo "branch=$GIT_BRANCH" >> $GITHUB_OUTPUT
          echo "release=${RELEASE}" >> $GITHUB_OUTPUT
          echo "checked-out-sha=${CHECKED_OUT_SHA}" >> $GITHUB_OUTPUT
       

  build-and-push-image:
    name: Build and push to ACR
    needs: set-env
    runs-on: ubuntu-22.04
    environment: ${{ needs.set-env.outputs.environment }}
    env:
        IP:
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Run Azure Login With a Service Principal Secret
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get IP Address
        run: |
          echo "IP=$(curl ifconfig.co)" >> $GITHUB_ENV

      - name: Add network rule
        uses: azure/CLI@v1
        with:
          azcliversion: 2.45.0
          inlineScript: |
             az acr network-rule add -n ${{ secrets.AZURE_ACR_NAME }} --ip-address "${{ env.IP }}/32" -g ${{ secrets.AZURE_ACR_RESOURCE_GROUP }}

      - name: Azure Container Registry login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.AZURE_ACR_SP_USERNAME }}
          password: ${{ secrets.AZURE_ACR_SP_PASSWORD }}
          registry: ${{ secrets.AZURE_NEW_ACR_URL }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          build-args: COMMIT_SHA=${{ needs.set-env.outputs.checked-out-sha }}
          tags: |
            ${{ secrets.AZURE_NEW_ACR_URL }}/${{ github.event.repository.name }}/${{ env.DOCKER_IMAGE }}:${{ needs.set-env.outputs.branch }}
            ${{ secrets.AZURE_NEW_ACR_URL }}/${{ github.event.repository.name }}/${{ env.DOCKER_IMAGE }}:${{ needs.set-env.outputs.release }}
            ${{ secrets.AZURE_NEW_ACR_URL }}/${{ github.event.repository.name }}/${{ env.DOCKER_IMAGE }}:sha-${{ needs.set-env.outputs.checked-out-sha }}
            ${{ secrets.AZURE_NEW_ACR_URL }}/${{ github.event.repository.name }}/${{ env.DOCKER_IMAGE }}:latest
          push: true

      - name: Remove network rule
        uses: azure/CLI@v1
        with:
          azcliversion: 2.45.0
          inlineScript: |
             az acr network-rule remove -n ${{ secrets.AZURE_ACR_NAME }} --ip-address "${{ env.IP }}" -g ${{ secrets.AZURE_ACR_RESOURCE_GROUP }} 

