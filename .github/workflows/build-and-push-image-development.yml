name: Continuous delivery

on:
  push:
    branches:
      - main
jobs:
  build-and-push-image-development:
    name: Build and push image development
    environment: development
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Azure Container Registry login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DEVELOPMENT_AZURE_ACR_CLIENTID }}
          password: ${{ secrets.DEVELOPMENT_AZURE_ACR_SECRET }}
          registry: ${{ secrets.DEVELOPMENT_ACR_URL }}

      - name: Prepare tags
        id: prepare-tags
        run: |
          DOCKER_IMAGE=${{ secrets.DEVELOPMENT_ACR_URL }}/amsd-app
          VERSION=latest
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            VERSION=sha-${GITHUB_SHA}
            TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}"
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=deploy-version::${VERSION}

      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Build Frontend
        run: make build-frontend

      - name: Push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.gpaas-azure-migration
          build-args: COMMIT_SHA=${GITHUB_SHA}
          push: true
          tags: ${{ steps.prepare-tags.outputs.tags }}

      - name: Azure login with ACA credentials
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DEVELOPMENT_AZURE_ACA_CREDENTIALS }}

      - name: Update Azure Container Apps Revision
        uses: azure/CLI@v1
        with:
          azcliversion: 2.40.0
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              --name ${{ secrets.DEVELOPMENT_ACA_CONTAINERAPP_NAME }} \
              --resource-group ${{ secrets.DEVELOPMENT_ACA_RESOURCE_GROUP }} \
              --image ${{ secrets.DEVELOPMENT_ACR_URL }}/amsd-app:${{ steps.prepare-tags.outputs.deploy-version }} \
              --output none
