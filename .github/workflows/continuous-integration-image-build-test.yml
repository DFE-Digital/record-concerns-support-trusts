name: Continuous integration

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  image-build-test:
    name: Image build test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones disabled for a better relevancy of SC analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanners
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Install dotnet reportgenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool
      - name: Restore dependencies
        run: dotnet restore ApplyToBecomeInternal/ApplyToBecomeInternal.sln
      - name: Build solution, test and run SonarCloud scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"DFE-Digital_amsd-casework" /o:"dfe-digital" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.coverageReportPaths=CoverageReport/SonarQube.xml
          dotnet build ConcernsCaseWork/ConcernsCaseWork.sln --no-restore
          dotnet test ConcernsCaseWork/ConcernsCaseWork.sln --no-build --verbosity diagnostic --collect:"XPlat Code Coverage"
          reportgenerator -reports:./**/coverage.cobertura.xml -targetdir:./ConcernsCaseWork/CoverageReport -reporttypes:SonarQube
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build
        run: |
          cp .env.development.local.example .env.development.local
          cp .env.database.example .env.database
          docker-compose -f docker-compose.yml -p app build
