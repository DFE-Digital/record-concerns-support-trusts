// <auto-generated />
using System;
using ConcernsCaseWork.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConcernsCaseWork.Data.Migrations
{
    [DbContext(typeof(ConcernsDbContext))]
    partial class ConcernsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("TimeOfChange")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__AuditLog");

                    b.ToTable("AuditLog", "concerns", t =>
                        {
                            t.HasTrigger("AuditLog_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.CaseDivision", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CDivision__C5B214360AF620234");

                    b.ToTable("Division", "concerns", t =>
                        {
                            t.HasTrigger("Division_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SFSO (Schools Financial Support and Oversight)",
                            UpdatedAt = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Regions Group",
                            UpdatedAt = new DateTime(2023, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.CaseRegion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CRegion__C5B214360AF620234");

                    b.ToTable("Region", "concerns", t =>
                        {
                            t.HasTrigger("Region_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "East Midlands",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "East of England",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "London",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "North East",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "North West",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "South East",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "South West",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "West Midlands",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yorkshire and The Humber",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.CityTechnologyCollege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompaniesHouseNumber")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("County")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Postcode")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Town")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UKPRN")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("CityTechnologyCollege", "concerns", t =>
                        {
                            t.HasTrigger("CityTechnologyCollege_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Concerns.TeamCasework.ConcernsCaseworkTeam", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("ConcernsCaseworkTeam", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsCaseworkTeam_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Concerns.TeamCasework.ConcernsCaseworkTeamMember", b =>
                {
                    b.Property<Guid>("TeamMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcernsCaseworkTeamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeamMember")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamMemberId");

                    b.HasIndex("ConcernsCaseworkTeamId");

                    b.ToTable("ConcernsCaseworkTeamMember", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsCaseworkTeamMember_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CaseAim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CaseLastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("CrmEnquiry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeEscalation")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeEscalationPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectionOfTravel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Issue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextSteps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonAtReview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrustCompaniesHouseNumber")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("TrustUkprn")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("[Id]");

                    b.HasKey("Id")
                        .HasName("PK__CCase__C5B214360AF620234");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DivisionId");

                    b.HasIndex("RatingId");

                    b.HasIndex("RegionId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TrustUkprn");

                    b.HasIndex("TrustUkprn", "CreatedAt", "CreatedBy")
                        .IsUnique()
                        .HasFilter("[TrustUkprn] IS NOT NULL AND [CreatedBy] IS NOT NULL");

                    b.ToTable("ConcernsCase", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsCase_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsMeansOfReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CMeansOfReferral");

                    b.ToTable("ConcernsMeansOfReferral", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsMeansOfReferral_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ESFA activity, TFF or other departmental activity.",
                            Name = "Internal",
                            UpdatedAt = new DateTime(2023, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CIU casework, self reported, regional director (RD) or other government bodies.",
                            Name = "External",
                            UpdatedAt = new DateTime(2022, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Whistleblowing",
                            Name = "Whistleblowing",
                            UpdatedAt = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CRating");

                    b.ToTable("ConcernsRating", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsRating_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Red-Plus",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Red",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Red-Amber",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amber-Green",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "n/a",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeansOfReferralId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CRecord");

                    b.HasIndex("MeansOfReferralId");

                    b.HasIndex("RatingId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.HasIndex("CaseId", "CreatedAt")
                        .IsUnique();

                    b.ToTable("ConcernsRecord", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsRecord_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CStatus__C5B214360AF620234");

                    b.ToTable("ConcernsStatus", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Live",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitoring",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Close",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__CType");

                    b.ToTable("ConcernsType", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsType_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Deficit",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Projected deficit",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Force majeure",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Financial governance",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Viability",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Irregularity",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Suspected fraud",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2022, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Financial compliance",
                            UpdatedAt = new DateTime(2023, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2023, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Safeguarding non-compliance",
                            UpdatedAt = new DateTime(2023, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Governance capability",
                            UpdatedAt = new DateTime(2023, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2023, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-compliance",
                            UpdatedAt = new DateTime(2023, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Decision", b =>
                {
                    b.Property<int>("DecisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DecisionId"));

                    b.Property<DateTimeOffset?>("ClosedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ConcernsCaseId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CrmCaseNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasCrmCase")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ReceivedRequestDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("RetrospectiveApproval")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubmissionDocumentLink")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool?>("SubmissionRequired")
                        .HasColumnType("bit");

                    b.Property<string>("SupportingNotes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal>("TotalAmountRequested")
                        .HasColumnType("money");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("DecisionId");

                    b.HasIndex("ConcernsCaseId", "CreatedAt")
                        .IsUnique();

                    b.ToTable("ConcernsDecision", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsDecision_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.DecisionDrawdownFacilityAgreed", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConcernsDecisionDrawdownFacilityAgreed", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsDecisionDrawdownFacilityAgreed_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "No"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PaymentUnderExistingArrangement"
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.DecisionFrameworkCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConcernsDecisionFrameworkCategory", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsDecisionFrameworkCategory_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "EnablingFinancialRecovery"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BuildingFinancialCapability"
                        },
                        new
                        {
                            Id = 3,
                            Name = "FacilitatingTransferFinanciallyAgreed"
                        },
                        new
                        {
                            Id = 4,
                            Name = "FacilitatingTransferEducationallyTriggered"
                        },
                        new
                        {
                            Id = 5,
                            Name = "EmergencyFunding"
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.DecisionStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConcernsDecisionStates", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsDecisionStates_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "InProgress"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.DecisionType", b =>
                {
                    b.Property<int>("DecisionId")
                        .HasColumnType("int");

                    b.Property<int>("DecisionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DecisionDrawdownFacilityAgreedId")
                        .HasColumnType("int");

                    b.Property<int?>("DecisionFrameworkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("DecisionId", "DecisionTypeId");

                    b.ToTable("ConcernsDecisionType", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsDecisionType_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.DecisionTypeId", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConcernsDecisionTypeId", "concerns", t =>
                        {
                            t.HasTrigger("ConcernsDecisionTypeId_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "NoticeToImprove"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Section128"
                        },
                        new
                        {
                            Id = 3,
                            Name = "QualifiedFloatingCharge"
                        },
                        new
                        {
                            Id = 4,
                            Name = "NonRepayableFinancialSupport"
                        },
                        new
                        {
                            Id = 5,
                            Name = "RepayableFinancialSupport"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ShortTermCashAdvance"
                        },
                        new
                        {
                            Id = 7,
                            Name = "WriteOffRecoverableFunding"
                        },
                        new
                        {
                            Id = 8,
                            Name = "OtherFinancialSupport"
                        },
                        new
                        {
                            Id = 9,
                            Name = "EstimatesFundingOrPupilNumberAdjustment"
                        },
                        new
                        {
                            Id = 10,
                            Name = "EsfaApproval"
                        },
                        new
                        {
                            Id = 11,
                            Name = "FreedomOfInformationExemptions"
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcome", b =>
                {
                    b.Property<int>("DecisionOutcomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DecisionOutcomeId"));

                    b.Property<int?>("Authorizer")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DecisionEffectiveFromDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DecisionId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("DecisionMadeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("money");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("DecisionOutcomeId");

                    b.HasIndex("DecisionId")
                        .IsUnique();

                    b.ToTable("DecisionOutcome", "concerns", t =>
                        {
                            t.HasTrigger("DecisionOutcome_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcomeAuthorizer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DecisionOutcomeAuthorizer", "concerns", t =>
                        {
                            t.HasTrigger("DecisionOutcomeAuthorizer_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "G7"
                        },
                        new
                        {
                            Id = 2,
                            Name = "G6"
                        },
                        new
                        {
                            Id = 3,
                            Name = "RegionalDirector"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DeputyDirector"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CounterSigningDeputyDirector"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Minister"
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcomeBusinessArea", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DecisionOutcomeBusinessArea", "concerns", t =>
                        {
                            t.HasTrigger("DecisionOutcomeBusinessArea_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SchoolsFinancialSupportAndOversight"
                        },
                        new
                        {
                            Id = 2,
                            Name = "BusinessPartner"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Capital"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Funding"
                        },
                        new
                        {
                            Id = 5,
                            Name = "FinancialProviderMarketOversight"
                        },
                        new
                        {
                            Id = 6,
                            Name = "RegionsGroup"
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcomeBusinessAreaMapping", b =>
                {
                    b.Property<int>("DecisionOutcomeId")
                        .HasColumnType("int");

                    b.Property<int>("DecisionOutcomeBusinessId")
                        .HasColumnType("int");

                    b.HasKey("DecisionOutcomeId", "DecisionOutcomeBusinessId");

                    b.ToTable("DecisionOutcomeBusinessAreaMapping", "concerns", t =>
                        {
                            t.HasTrigger("DecisionOutcomeBusinessAreaMapping_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcomeStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DecisionOutcomeStatus", "concerns", t =>
                        {
                            t.HasTrigger("DecisionOutcomeStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ApprovedWithConditions"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PartiallyApproved"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Withdrawn"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Declined"
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.FinancialPlanCase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatePlanRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateViablePlanReceived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("CaseUrn", "CreatedAt")
                        .IsUnique();

                    b.ToTable("FinancialPlanCase", "concerns", t =>
                        {
                            t.HasTrigger("FinancialPlanCase_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.FinancialPlanStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClosedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FinancialPlanStatus", "concerns", t =>
                        {
                            t.HasTrigger("FinancialPlanStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Awaiting Plan",
                            IsClosedStatus = false,
                            Name = "AwaitingPlan",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Return To Trust",
                            IsClosedStatus = false,
                            Name = "ReturnToTrust",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Viable Plan Received",
                            IsClosedStatus = true,
                            Name = "ViablePlanReceived",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Abandoned",
                            IsClosedStatus = true,
                            Name = "Abandoned",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsideration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClosedStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClosedStatusId");

                    b.HasIndex("CaseUrn", "CreatedAt")
                        .IsUnique();

                    b.ToTable("NTIUnderConsiderationCase", "concerns", t =>
                        {
                            t.HasTrigger("NTIUnderConsiderationCase_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIUnderConsiderationReason", "concerns", t =>
                        {
                            t.HasTrigger("NTIUnderConsiderationReason_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cash flow problems",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (actual)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (projected)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Governance concerns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-Compliance with Academies Financial/Trust Handbook",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-Compliance with financial returns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Risk of insolvency",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Safeguarding",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReasonMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("NTIUnderConsiderationId")
                        .HasColumnType("bigint");

                    b.Property<int>("NTIUnderConsiderationReasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NTIUnderConsiderationId");

                    b.HasIndex("NTIUnderConsiderationReasonId");

                    b.ToTable("NTIUnderConsiderationReasonMapping", "concerns", t =>
                        {
                            t.HasTrigger("NTIUnderConsiderationReasonMapping_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIUnderConsiderationStatus", "concerns", t =>
                        {
                            t.HasTrigger("NTIUnderConsiderationStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "No further action being taken",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Warning letter or NTI can be set up using \"Add to case\".",
                            Name = "To be escalated",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClosedStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateLetterSent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClosedStatusId");

                    b.HasIndex("StatusId");

                    b.HasIndex("CaseUrn", "CreatedAt")
                        .IsUnique();

                    b.ToTable("NTIWarningLetterCase", "concerns", t =>
                        {
                            t.HasTrigger("NTIWarningLetterCase_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConditionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConditionTypeId");

                    b.ToTable("NTIWarningLetterCondition", "concerns", t =>
                        {
                            t.HasTrigger("NTIWarningLetterCondition_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Trust financial plan",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Action plan",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Lines of accountability",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Providing sufficient challenge",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Scheme of delegation",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ConditionTypeId = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Publishing requirements (compliance with)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ConditionTypeId = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Financial returns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NTIWarningLetterConditionId")
                        .HasColumnType("int");

                    b.Property<long>("NTIWarningLetterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NTIWarningLetterConditionId");

                    b.HasIndex("NTIWarningLetterId");

                    b.ToTable("NTIWarningLetterConditionMapping", "concerns", t =>
                        {
                            t.HasTrigger("NTIWarningLetterConditionMapping_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIWarningLetterConditionType", "concerns", t =>
                        {
                            t.HasTrigger("NTIWarningLetterConditionType_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Financial management conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Governance conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Compliance conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Standard conditions (mandatory)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIWarningLetterReason", "concerns", t =>
                        {
                            t.HasTrigger("NTIWarningLetterReason_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cash flow problems",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (actual)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (projected)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Governance concerns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-compliance with Academies Financial/Trust Handbook",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-compliance with financial returns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Risk of insolvency",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Safeguarding",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReasonMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("NTIWarningLetterId")
                        .HasColumnType("bigint");

                    b.Property<int>("NTIWarningLetterReasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NTIWarningLetterId");

                    b.HasIndex("NTIWarningLetterReasonId");

                    b.ToTable("NTIWarningLetterReasonMapping", "concerns", t =>
                        {
                            t.HasTrigger("NTIWarningLetterReasonMapping_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClosingState")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastTenseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIWarningLetterStatus", "concerns", t =>
                        {
                            t.HasTrigger("NTIWarningLetterStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Preparing warning letter",
                            PastTenseName = "",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Sent to trust",
                            PastTenseName = "",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The warning letter is no longer needed.",
                            IsClosingState = true,
                            Name = "Cancel warning letter",
                            PastTenseName = "Cancelled",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "You are satisfied that all the conditions have been, or will be, met as outlined in the letter",
                            IsClosingState = true,
                            Name = "Conditions met",
                            PastTenseName = "Conditions met",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conditions have not been met. Close NTI: Warning letter and begin NTI on case page using \"Add to case\".",
                            IsClosingState = true,
                            Name = "Escalate to Notice To Improve",
                            PastTenseName = "Escalated to Notice To Improve",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImprove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClosedStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateNTIClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNTILifted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("SumissionDecisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClosedStatusId");

                    b.HasIndex("StatusId");

                    b.HasIndex("CaseUrn", "CreatedAt")
                        .IsUnique();

                    b.ToTable("NoticeToImproveCase", "concerns", t =>
                        {
                            t.HasTrigger("NoticeToImproveCase_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConditionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConditionTypeId");

                    b.ToTable("NoticeToImproveCondition", "concerns", t =>
                        {
                            t.HasTrigger("NoticeToImproveCondition_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Audit and risk committee",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Internal audit findings",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Trust financial plan",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Financial management and governance review",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 5,
                            Name = "Financial systems & controls and internal scrutiny",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 6,
                            Name = "Integrated curriculum and financial planning",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 7,
                            Name = "Monthly management accounts",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 8,
                            Name = "National deals for schools",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 9,
                            Name = "School resource management",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Academy ambassadors",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Academy transfer",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Action plan",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "AGM of members",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 5,
                            Name = "Board meetings",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 6,
                            Name = "Independant review of governance",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 7,
                            Name = "Lines of accountability",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 8,
                            Name = "Providing sufficient challenge",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 9,
                            Name = "Scheme of delegation",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 10,
                            Name = "School improvement",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 11,
                            Name = "Strengthen governance",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            ConditionTypeId = 3,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Admissions",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            ConditionTypeId = 3,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Excessive executive payments (high pay)",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            ConditionTypeId = 3,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Publishing requirements (compliance with)",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 24,
                            ConditionTypeId = 3,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Related party Transactions (RPTs)",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 25,
                            ConditionTypeId = 4,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Review and update safeguarding policies",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 26,
                            ConditionTypeId = 4,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Commission external review of safeguarding",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 27,
                            ConditionTypeId = 4,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Appoint trustee with leadership responsibility for safeguarding",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 28,
                            ConditionTypeId = 4,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Safeguarding recruitment process",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 29,
                            ConditionTypeId = 5,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Novel, contentious, and/or repercussive transactions",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 30,
                            ConditionTypeId = 5,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Off-payroll payments",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            ConditionTypeId = 5,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Procurement policy",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            ConditionTypeId = 5,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Register of interests",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            ConditionTypeId = 6,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Financial returns",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            ConditionTypeId = 6,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Delegated freedoms",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            ConditionTypeId = 6,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Trustee contact details",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            ConditionTypeId = 7,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Review of board and executive team capability",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            ConditionTypeId = 7,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Academy transfer (lower risk)",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            ConditionTypeId = 7,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Move to latest model funding agreement",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            ConditionTypeId = 7,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Qualified Floating Charge (QFC)",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveConditionMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NoticeToImproveConditionId")
                        .HasColumnType("int");

                    b.Property<long>("NoticeToImproveId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NoticeToImproveConditionId");

                    b.HasIndex("NoticeToImproveId");

                    b.ToTable("NoticeToImproveConditionMapping", "concerns", t =>
                        {
                            t.HasTrigger("NoticeToImproveConditionMapping_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveConditionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NoticeToImproveConditionType", "concerns", t =>
                        {
                            t.HasTrigger("NoticeToImproveConditionType_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Financial management conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Governance conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Compliance conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Safeguarding conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 5,
                            Name = "Fraud and irregularity",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 6,
                            Name = "Standard conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 7,
                            Name = "Additional Financial Support conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NoticeToImproveReason", "concerns", t =>
                        {
                            t.HasTrigger("NoticeToImproveReason_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cash flow problems",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (actual)",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (projected)",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Governance concerns",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-compliance with Academies Financial/Trust Handbook",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-compliance with financial returns",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Risk of insolvency",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Safeguarding",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveReasonMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("NoticeToImproveId")
                        .HasColumnType("bigint");

                    b.Property<int>("NoticeToImproveReasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NoticeToImproveId");

                    b.HasIndex("NoticeToImproveReasonId");

                    b.ToTable("NoticeToImproveReasonMapping", "concerns", t =>
                        {
                            t.HasTrigger("NoticeToImproveReasonMapping_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClosingState")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NoticeToImproveStatus", "concerns", t =>
                        {
                            t.HasTrigger("NoticeToImproveStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Preparing NTI",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Issued NTI",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Progress on track",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Evidence of NTI non-compliance",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Serious NTI breaches - considering escalation to TWN",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Submission to lift NTI in progress",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = false,
                            Name = "Submission to close NTI in progress",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = true,
                            Name = "Lifted",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = true,
                            Name = "Closed",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosingState = true,
                            Name = "Cancelled",
                            UpdatedAt = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMACase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<int?>("CloseStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAccepted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOffered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReportSentToTrust")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateOfVisit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(5000)
                        .HasColumnType("VARCHAR(5000)");

                    b.Property<int?>("ReasonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateOfVisit")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReasonId");

                    b.HasIndex("CaseUrn", "CreatedAt")
                        .IsUnique();

                    b.ToTable("SRMACase", "concerns", t =>
                        {
                            t.HasTrigger("SRMACase_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMAReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SRMAReason", "concerns", t =>
                        {
                            t.HasTrigger("SRMAReason_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OfferLinked",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SchoolsFinancialSupportAndOversight",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "RegionsGroupIntervention",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMAStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SRMAStatus", "concerns", t =>
                        {
                            t.HasTrigger("SRMAStatus_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TrustConsidering",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PreparingForDeployment",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Deployed",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Declined",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cancelled",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Complete",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TargetedTrustEngagementActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TargetedTrustEngagementActivity", "concerns", t =>
                        {
                            t.HasTrigger("TargetedTrustEngagementActivity_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BudgetForecastReturnAccountsReturnDriven",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExecutivePayEngagement",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinancialReturnsAssurance",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ReservesOversightAndAssuranceProject",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LocalProactiveEngagement",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OtherNationalProcesses",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "NoEngagementActivitiesWereTakenForward",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TargetedTrustEngagementActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TargetedTrustEngagementActivityType", "concerns", t =>
                        {
                            t.HasTrigger("TargetedTrustEngagementActivityType_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category1",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category2",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category3",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Category4",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CEOs",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Leadership",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CEOsAndLeadership",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AnnualSummaryInternalScrutinyReports",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AuditIssues",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ManagementLetterIssues",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "RegularityIssues",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Priority1",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Priority2",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Priority3",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Priority4",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BudgetForecastReturnAccountsReturnDriven",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ExecutivePayEngagement",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FinancialReturnsAssurance",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ReservesOversightAssuranceProject",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LocalProactiveEngagement",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OtherNationalProcesses",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TargetedTrustEngagementCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset?>("EngagementEndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("EngagementOutcomeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("EngagementStartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("VARCHAR(2000)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CaseUrn", "CreatedAt")
                        .IsUnique();

                    b.ToTable("TargetedTrustEngagementCase", "concerns", t =>
                        {
                            t.HasTrigger("TargetedTrustEngagementCase_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TargetedTrustEngagementOutcome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TargetedTrustEngagementOutcomeType", "concerns", t =>
                        {
                            t.HasTrigger("TargetedTrustEngagementOutcomeType_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdequateResponseReceived",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "InadequateResponseReceived",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "NoEngagementTookPlace",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "NoResponseRequired",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TargetedTrustEngagementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TargetedTrustEngagementCaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetedTrustEngagementCaseId");

                    b.ToTable("TargetedTrustEngagementActivityMapping", "concerns", t =>
                        {
                            t.HasTrigger("TargetedTrustEngagementActivityMapping_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TrustFinancialForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ClosedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ForecastingToolRanAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SFSOInitialReviewHappenedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SRMAOfferedAfterTFF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrustRespondedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("WasTrustResponseSatisfactory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__TrustFinancialForecast");

                    b.HasIndex("CaseUrn", "CreatedAt")
                        .IsUnique();

                    b.ToTable("TrustFinancialForecast", "concerns", t =>
                        {
                            t.HasTrigger("TrustFinancialForecast_Trigger");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Concerns.TeamCasework.ConcernsCaseworkTeamMember", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.Concerns.TeamCasework.ConcernsCaseworkTeam", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("ConcernsCaseworkTeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsCase", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.CaseDivision", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsRating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.CaseRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Rating");

                    b.Navigation("Region");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRecord", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsCase", "ConcernsCase")
                        .WithMany("ConcernsRecords")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ConcernsCase_ConcernsRecord");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsMeansOfReferral", "ConcernsMeansOfReferral")
                        .WithMany("FkConcernsRecord")
                        .HasForeignKey("MeansOfReferralId")
                        .HasConstraintName("FK__ConcernsRecord_ConcernsMeansOfReferral");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsRating", "ConcernsRating")
                        .WithMany("FkConcernsRecord")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ConcernsRecord_ConcernsRating");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsType", "ConcernsType")
                        .WithMany("FkConcernsRecord")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ConcernsRecord_ConcernsType");

                    b.Navigation("ConcernsCase");

                    b.Navigation("ConcernsMeansOfReferral");

                    b.Navigation("ConcernsRating");

                    b.Navigation("ConcernsType");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Decision", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsCase", null)
                        .WithMany("Decisions")
                        .HasForeignKey("ConcernsCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.DecisionType", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.Decisions.Decision", null)
                        .WithMany("DecisionTypes")
                        .HasForeignKey("DecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcome", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.Decisions.Decision", null)
                        .WithOne("Outcome")
                        .HasForeignKey("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcome", "DecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcomeBusinessAreaMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcome", null)
                        .WithMany("BusinessAreasConsulted")
                        .HasForeignKey("DecisionOutcomeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.FinancialPlanCase", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.FinancialPlanStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsideration", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIUnderConsiderationStatus", "ClosedStatus")
                        .WithMany()
                        .HasForeignKey("ClosedStatusId");

                    b.Navigation("ClosedStatus");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReasonMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIUnderConsideration", "NTIUnderConsideration")
                        .WithMany("UnderConsiderationReasonsMapping")
                        .HasForeignKey("NTIUnderConsiderationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReason", "NTIUnderConsiderationReason")
                        .WithMany("UnderConsiderationReasonsMapping")
                        .HasForeignKey("NTIUnderConsiderationReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NTIUnderConsideration");

                    b.Navigation("NTIUnderConsiderationReason");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetter", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterStatus", "ClosedStatus")
                        .WithMany()
                        .HasForeignKey("ClosedStatusId");

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("ClosedStatus");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionType", "ConditionType")
                        .WithMany()
                        .HasForeignKey("ConditionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConditionType");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", "NTIWarningLetterCondition")
                        .WithMany("WarningLetterConditionsMapping")
                        .HasForeignKey("NTIWarningLetterConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetter", "NTIWarningLetter")
                        .WithMany("WarningLetterConditionsMapping")
                        .HasForeignKey("NTIWarningLetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NTIWarningLetter");

                    b.Navigation("NTIWarningLetterCondition");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReasonMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetter", "NTIWarningLetter")
                        .WithMany("WarningLetterReasonsMapping")
                        .HasForeignKey("NTIWarningLetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterReason", "NTIWarningLetterReason")
                        .WithMany("WarningLetterReasonsMapping")
                        .HasForeignKey("NTIWarningLetterReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NTIWarningLetter");

                    b.Navigation("NTIWarningLetterReason");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImprove", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NoticeToImproveStatus", "ClosedStatus")
                        .WithMany()
                        .HasForeignKey("ClosedStatusId");

                    b.HasOne("ConcernsCaseWork.Data.Models.NoticeToImproveStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("ClosedStatus");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveCondition", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NoticeToImproveConditionType", "ConditionType")
                        .WithMany()
                        .HasForeignKey("ConditionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConditionType");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveConditionMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NoticeToImproveCondition", "NoticeToImproveCondition")
                        .WithMany("NoticeToImproveConditionsMapping")
                        .HasForeignKey("NoticeToImproveConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NoticeToImprove", "NoticeToImprove")
                        .WithMany("NoticeToImproveConditionsMapping")
                        .HasForeignKey("NoticeToImproveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NoticeToImprove");

                    b.Navigation("NoticeToImproveCondition");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveReasonMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NoticeToImprove", "NoticeToImprove")
                        .WithMany("NoticeToImproveReasonsMapping")
                        .HasForeignKey("NoticeToImproveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NoticeToImproveReason", "NoticeToImproveReason")
                        .WithMany("NoticeToImproveReasonsMapping")
                        .HasForeignKey("NoticeToImproveReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NoticeToImprove");

                    b.Navigation("NoticeToImproveReason");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMACase", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.SRMAReason", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonId");

                    b.Navigation("Reason");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TargetedTrustEngagementType", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.TargetedTrustEngagementCase", null)
                        .WithMany("ActivityTypes")
                        .HasForeignKey("TargetedTrustEngagementCaseId");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Concerns.TeamCasework.ConcernsCaseworkTeam", b =>
                {
                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsCase", b =>
                {
                    b.Navigation("ConcernsRecords");

                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsMeansOfReferral", b =>
                {
                    b.Navigation("FkConcernsRecord");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRating", b =>
                {
                    b.Navigation("FkConcernsRecord");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsType", b =>
                {
                    b.Navigation("FkConcernsRecord");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Decision", b =>
                {
                    b.Navigation("DecisionTypes");

                    b.Navigation("Outcome");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.Decisions.Outcome.DecisionOutcome", b =>
                {
                    b.Navigation("BusinessAreasConsulted");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsideration", b =>
                {
                    b.Navigation("UnderConsiderationReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReason", b =>
                {
                    b.Navigation("UnderConsiderationReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetter", b =>
                {
                    b.Navigation("WarningLetterConditionsMapping");

                    b.Navigation("WarningLetterReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", b =>
                {
                    b.Navigation("WarningLetterConditionsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReason", b =>
                {
                    b.Navigation("WarningLetterReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImprove", b =>
                {
                    b.Navigation("NoticeToImproveConditionsMapping");

                    b.Navigation("NoticeToImproveReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveCondition", b =>
                {
                    b.Navigation("NoticeToImproveConditionsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NoticeToImproveReason", b =>
                {
                    b.Navigation("NoticeToImproveReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.TargetedTrustEngagementCase", b =>
                {
                    b.Navigation("ActivityTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
