// <auto-generated />
using System;
using Concerns.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Concerns.Data.Migrations
{
    [DbContext(typeof(ConcernsDbContext))]
    partial class ConcernsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence<int>("ConcernsGlobalSequence")
                .HasMin(1L);

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CaseAim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrmEnquiry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeEscalation")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeEscalationPoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DirectionOfTravel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextSteps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatingUrn")
                        .HasColumnType("int");

                    b.Property<string>("ReasonAtReview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusUrn")
                        .HasColumnType("int");

                    b.Property<string>("TrustUkprn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ConcernsGlobalSequence");

                    b.HasKey("Id")
                        .HasName("PK__CCase__C5B214360AF620234");

                    b.ToTable("ConcernsCase", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsMeansOfReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ConcernsGlobalSequence");

                    b.HasKey("Id")
                        .HasName("PK__CMeansOfReferral");

                    b.ToTable("ConcernsMeansOfReferral", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "ESFA activity, TFFT or other departmental activity",
                            Name = "Internal",
                            UpdatedAt = new DateTime(2022, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "CIU casework, whistleblowing, self reported, RSCs or other government bodies",
                            Name = "External",
                            UpdatedAt = new DateTime(2022, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ConcernsGlobalSequence");

                    b.HasKey("Id")
                        .HasName("PK__CRating");

                    b.ToTable("ConcernsRating", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Red-Plus",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Red",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Red-Amber",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amber-Green",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "n/a",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MeansOfReferralId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RatingId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusUrn")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ConcernsGlobalSequence");

                    b.HasKey("Id")
                        .HasName("PK__CRecord");

                    b.HasIndex("CaseId");

                    b.HasIndex("MeansOfReferralId");

                    b.HasIndex("RatingId");

                    b.HasIndex("TypeId");

                    b.ToTable("ConcernsRecord", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ConcernsGlobalSequence");

                    b.HasKey("Id")
                        .HasName("PK__CStatus__C5B214360AF620234");

                    b.ToTable("ConcernsStatus", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Live",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monitoring",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Close",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ConcernsGlobalSequence");

                    b.HasKey("Id")
                        .HasName("PK__CType");

                    b.ToTable("ConcernsType", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Financial reporting",
                            Name = "Compliance",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Financial returns",
                            Name = "Compliance",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Deficit",
                            Name = "Financial",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Projected deficit / Low future surplus",
                            Name = "Financial",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cash flow shortfall",
                            Name = "Financial",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Clawback",
                            Name = "Financial",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "Force majeure",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Governance",
                            Name = "Governance",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Closure",
                            Name = "Governance",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Executive Pay",
                            Name = "Governance",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Safeguarding",
                            Name = "Governance",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Allegations and self reported concerns",
                            Name = "Irregularity",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Related party transactions - in year",
                            Name = "Irregularity",
                            UpdatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Urn = 0
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.FinancialPlanCase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatePlanRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateViablePlanReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StatusId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("FinancialPlanCase", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.FinancialPlanStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClosedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FinancialPlanStatus", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Awaiting Plan",
                            IsClosedStatus = false,
                            Name = "AwaitingPlan",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Return To Trust",
                            IsClosedStatus = false,
                            Name = "ReturnToTrust",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Viable Plan Received",
                            IsClosedStatus = true,
                            Name = "ViablePlanReceived",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Abandoned",
                            IsClosedStatus = true,
                            Name = "Abandoned",
                            UpdatedAt = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsideration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClosedStatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClosedStatusId");

                    b.ToTable("NTIUnderConsiderationCase", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIUnderConsiderationReason", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cash flow problems",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (actual)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (projected)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Governance concerns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-Compliance with Academies Financial/Trust Handbook",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-Compliance with financial returns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Risk of insolvency",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Safeguarding",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReasonMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("NTIUnderConsiderationId")
                        .HasColumnType("bigint");

                    b.Property<int>("NTIUnderConsiderationReasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NTIUnderConsiderationId");

                    b.HasIndex("NTIUnderConsiderationReasonId");

                    b.ToTable("NTIUnderConsiderationReasonMapping", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIUnderConsiderationStatus", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "No further action being taken",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Warning letter or NTI can be set up using \"Add to case\".",
                            Name = "To be escalated",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClosedStatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateLetterSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("StatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClosedStatusId");

                    b.HasIndex("StatusId");

                    b.ToTable("NTIWarningLetterCase", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConditionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConditionTypeId");

                    b.ToTable("NTIWarningLetterCondition", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConditionTypeId = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Trust financial plan",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Action plan",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Lines of accountability",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Providing sufficient challenge",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            ConditionTypeId = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Scheme of delegation",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            ConditionTypeId = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Publishing requirements (compliance with)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            ConditionTypeId = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Financial returns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NTIWarningLetterConditionId")
                        .HasColumnType("int");

                    b.Property<long>("NTIWarningLetterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NTIWarningLetterConditionId");

                    b.HasIndex("NTIWarningLetterId");

                    b.ToTable("NTIWarningLetterConditionMapping", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIWarningLetterConditionType", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 1,
                            Name = "Financial management conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 2,
                            Name = "Governance conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 3,
                            Name = "Compliance conditions",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayOrder = 4,
                            Name = "Standard conditions (mandatory)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIWarningLetterReason", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cash flow problems",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (actual)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cumulative deficit (projected)",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Governance concerns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-compliance with Academies Financial/Trust Handbook",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Non-compliance with financial returns",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Risk of insolvency",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Safeguarding",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReasonMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("NTIWarningLetterId")
                        .HasColumnType("bigint");

                    b.Property<int>("NTIWarningLetterReasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NTIWarningLetterId");

                    b.HasIndex("NTIWarningLetterReasonId");

                    b.ToTable("NTIWarningLetterReasonMapping", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClosingState")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("NTIWarningLetterStatus", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsClosingState = false,
                            Name = "Preparing warning letter",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            IsClosingState = false,
                            Name = "Sent to trust",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The warning letter is no longer needed.",
                            IsClosingState = true,
                            Name = "Cancel warning letter",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "You are satisfied that all the conditions have been, or will be, met as outlined in the letter",
                            IsClosingState = true,
                            Name = "Conditions met",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conditions have not been met. Close NTI: Warning letter and begin NTI on case page using \"Add to case\".",
                            IsClosingState = true,
                            Name = "Escalate to Notice To Improve",
                            UpdatedAt = new DateTime(2022, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMACase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CaseUrn")
                        .HasColumnType("int");

                    b.Property<int?>("CloseStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAccepted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOffered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReportSentToTrust")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDateOfVisit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ReasonId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDateOfVisit")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Urn")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ReasonId");

                    b.ToTable("SRMACase", "sdd");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMAReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Urn")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SRMAReason", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OfferLinked",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "AMSDIntervention",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "RDDIntervention",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMAStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("Urn")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SRMAStatus", "sdd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TrustConsidering",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PreparingForDeployment",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Deployed",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Declined",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Canceled",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Complete",
                            UpdatedAt = new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRecord", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsCase", "ConcernsCase")
                        .WithMany("ConcernsRecords")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ConcernsCase_ConcernsRecord");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsMeansOfReferral", "ConcernsMeansOfReferral")
                        .WithMany("FkConcernsRecord")
                        .HasForeignKey("MeansOfReferralId")
                        .HasConstraintName("FK__ConcernsRecord_ConcernsMeansOfReferral");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsRating", "ConcernsRating")
                        .WithMany("FkConcernsRecord")
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ConcernsRecord_ConcernsRating");

                    b.HasOne("ConcernsCaseWork.Data.Models.ConcernsType", "ConcernsType")
                        .WithMany("FkConcernsRecord")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ConcernsRecord_ConcernsType");

                    b.Navigation("ConcernsCase");

                    b.Navigation("ConcernsMeansOfReferral");

                    b.Navigation("ConcernsRating");

                    b.Navigation("ConcernsType");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.FinancialPlanCase", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.FinancialPlanStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsideration", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIUnderConsiderationStatus", "ClosedStatus")
                        .WithMany()
                        .HasForeignKey("ClosedStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClosedStatus");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReasonMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIUnderConsideration", "NTIUnderConsideration")
                        .WithMany("UnderConsiderationReasonsMapping")
                        .HasForeignKey("NTIUnderConsiderationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReason", "NTIUnderConsiderationReason")
                        .WithMany("UnderConsiderationReasonsMapping")
                        .HasForeignKey("NTIUnderConsiderationReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NTIUnderConsideration");

                    b.Navigation("NTIUnderConsiderationReason");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetter", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterStatus", "ClosedStatus")
                        .WithMany()
                        .HasForeignKey("ClosedStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClosedStatus");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionType", "ConditionType")
                        .WithMany()
                        .HasForeignKey("ConditionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConditionType");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterConditionMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", "NTIWarningLetterCondition")
                        .WithMany("WarningLetterConditionsMapping")
                        .HasForeignKey("NTIWarningLetterConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetter", "NTIWarningLetter")
                        .WithMany("WarningLetterConditionsMapping")
                        .HasForeignKey("NTIWarningLetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NTIWarningLetter");

                    b.Navigation("NTIWarningLetterCondition");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReasonMapping", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetter", "NTIWarningLetter")
                        .WithMany("WarningLetterReasonsMapping")
                        .HasForeignKey("NTIWarningLetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConcernsCaseWork.Data.Models.NTIWarningLetterReason", "NTIWarningLetterReason")
                        .WithMany("WarningLetterReasonsMapping")
                        .HasForeignKey("NTIWarningLetterReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NTIWarningLetter");

                    b.Navigation("NTIWarningLetterReason");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.SRMACase", b =>
                {
                    b.HasOne("ConcernsCaseWork.Data.Models.SRMAReason", "Reason")
                        .WithMany()
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reason");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsCase", b =>
                {
                    b.Navigation("ConcernsRecords");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsMeansOfReferral", b =>
                {
                    b.Navigation("FkConcernsRecord");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsRating", b =>
                {
                    b.Navigation("FkConcernsRecord");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.ConcernsType", b =>
                {
                    b.Navigation("FkConcernsRecord");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsideration", b =>
                {
                    b.Navigation("UnderConsiderationReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIUnderConsiderationReason", b =>
                {
                    b.Navigation("UnderConsiderationReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetter", b =>
                {
                    b.Navigation("WarningLetterConditionsMapping");

                    b.Navigation("WarningLetterReasonsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterCondition", b =>
                {
                    b.Navigation("WarningLetterConditionsMapping");
                });

            modelBuilder.Entity("ConcernsCaseWork.Data.Models.NTIWarningLetterReason", b =>
                {
                    b.Navigation("WarningLetterReasonsMapping");
                });
#pragma warning restore 612, 618
        }
    }
}
