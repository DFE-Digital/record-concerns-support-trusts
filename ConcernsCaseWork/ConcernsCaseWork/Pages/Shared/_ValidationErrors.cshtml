@using ConcernsCaseWork.Extensions;
@using ConcernsCaseWork.Models;
@using Microsoft.AspNetCore.Mvc.ModelBinding;
@using ConcernsCaseWork.Enums;
@model ConcernsCaseWork.Pages.Base.AbstractPageModel


@if (!Model.ModelState.IsValid)
{
	var errors = Model.ModelState.GetValidationMessages();

    var formattedErrors = errors.Select((error, index) =>
    {
        var propertyName = error.Key.Split(".").First();

        object selectedProperty = Model.GetType().GetProperty(propertyName)?.GetValue(Model);

        var containerId = $"container-{error.Key}";
        var sortOrder = index;

        if (selectedProperty is BaseUiComponent)
        {
            var component = selectedProperty as BaseUiComponent;
            containerId = $"container-{component.ElementRootId}";
            sortOrder = component.SortOrder.HasValue ? component.SortOrder.Value : sortOrder;
        }

        return new { ContainerId = containerId, SortOrder = sortOrder, ErrorMessage = error.Value };
    }).OrderBy(error => error.SortOrder);


	<div tabindex="-1" role="group" id="errorSummary" class="govuk-error-summary" data-module="error-summary" aria-labelledby="errorSummary-heading">
		<h2 id="error-summary-title" class="govuk-error-summary__title">There is a problem</h2>
		<div class="govuk-error-summary__body">
			<ul class="govuk-list govuk-error-summary__list">
                @foreach (var error in formattedErrors)
                {
                    <li><a tabindex="0" aria-label="Error: @error.ErrorMessage" class="govuk govuk-error-message scrollable-error" data-scroll-to="@error.ContainerId">@error.ErrorMessage</a></li>
                }
            </ul>
		</div>
	</div>
}
