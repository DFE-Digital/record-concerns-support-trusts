@using Microsoft.AspNetCore.Mvc.ModelBinding;
@using System.ComponentModel.DataAnnotations;
@model ConcernsCaseWork.Models.RadioButtonsUiComponent

@{
    var required = Model.Required == true ? "true" : "false";

    var modelPath = $"{Model.Name}.{Model.DisplayName}";
    ViewContext.ModelState.TryGetValue(modelPath, out ModelStateEntry modelState);

    var errors = modelState?.Errors.Select(e => new ValidationResult(e.ErrorMessage, new[] { Model.DisplayName })); ;
    var errorClass = errors?.Any() ?? false ? " govuk-form-group--error" : string.Empty;
}

<div class="govuk-form-group @errorClass" id="container-@Model.ElementRootId">
	<fieldset class="govuk-fieldset">
        @if (!string.IsNullOrEmpty(Model.Heading))
        {
             <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
			    <h2 class="govuk-heading-m">
				    @Model.Heading
			    </h2>
		    </legend>
        }

        @if (!string.IsNullOrEmpty(Model.HintFromPartialView))
        {
            <partial name="@Model.HintFromPartialView" />
        }

		<div class="govuk-radios" data-module="govuk-radios">
            <partial name="Components/_ValidationErrorDetail" model="@errors" />
			@foreach (var radioItem in Model.RadioItems)
			{
                var isChecked = Model.SelectedId == radioItem.Id ? "checked" : "";
                var testId = !string.IsNullOrEmpty(radioItem.TestId) ? radioItem.TestId : radioItem.Label;
                var radioItemSubContainerId = $"sub-item-container-{radioItem.Id}";
                var radioItemElementId = $"{Model.ElementRootId}-{radioItem.Id}";
				
				<div class="govuk-radios__item">
					<input class="govuk-radios__input"
                           id="@radioItemElementId"
                           name="@Model.Name.@nameof(Model.SelectedId)"
					       type="radio"
					       data-testid="@testId" 
					       value="@radioItem.Id"
                           data-aria-controls="@radioItemSubContainerId"
					       @isChecked />

                    <label class="govuk-label govuk-radios__label" for="@radioItemElementId">
                        @if (@radioItem.IsHtmlLabel == true)
                        {
                            // Label contains HTML, so we can render it directly
                            @Html.Raw(@radioItem.Label)
                        }
                        else
                        {
                            <span>
							    @radioItem.Label
						    </span>
                        }

					</label>
                    @if (!string.IsNullOrEmpty(radioItem.HintText))
                    {
                        <div class="govuk-hint govuk-radios__hint">
                            @radioItem.HintText
                        </div>
                    }

                    @if (@radioItem.SubRadioItems.Count > 0)
                    {
                        // Identify which options have sub items so we can validate them
                        // This handles radio lists where some items have sub options and some do not
                        <input type="hidden" name="@Model.Name.@nameof(Model.OptionsWithSubItems)" value="@radioItem.Id" />

                        <div class="govuk-radios__conditional" id="@radioItemSubContainerId">
                            <div class="govuk-form-group">

                                @foreach (var subRadioItem in radioItem.SubRadioItems)
                                {
                                    var subItemIsChecked = Model.SelectedSubId == subRadioItem.Id ? "checked" : "";

                                    <div class="govuk-radios__item">
                                        <input 
                                            class="govuk-radios__input" 
                                            id="sub-type-@subRadioItem.Label" 
                                            name="@Model.Name.@nameof(Model.SelectedSubId)" 
                                            value="@subRadioItem.Id" 
                                            type="radio"
                                            data-testid="@subRadioItem.TestId"
                                            @subItemIsChecked>

                                        <label class="govuk-label govuk-radios__label" for="sub-type-@subRadioItem.Label">
                                            @subRadioItem.Label
                                        </label>
                                    </div>
                                }

                            </div>
                        </div>
                    }
                </div>
			}
		</div>
	</fieldset>
    <input type="hidden" name="@(Model.Name).DisplayName" value="@Model.DisplayName" />
    <input type="hidden" name="@(Model.Name).SubItemDisplayName" value="@Model.SubItemDisplayName" />
    <input type="hidden" name="@(Model.Name).Required" value="@required" />
    <input type="hidden" name="@(Model.Name).ErrorTextForRequiredField" value="@Model.ErrorTextForRequiredField" />
</div>