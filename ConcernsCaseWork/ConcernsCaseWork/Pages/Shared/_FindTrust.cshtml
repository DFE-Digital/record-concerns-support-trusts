@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NetEscapades.AspNetCore.SecurityHeaders
@{
}

<div tabindex="-1" role="group" id="errorSummary" class="govuk-error-summary moj-hidden" aria-labelledby="error-summary-title" data-module="error-summary"></div>

<div class="govuk-form-group">
	<fieldset class="govuk-fieldset" data-required data-error="Search cannot be blank" aria-required="true">

		<legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
			<h2 class="govuk-fieldset__heading govuk-heading-m">
				Find Trust
			</h2>
		</legend>

		<label class="govuk-hint" for="search" id="outgoing-trust-search-query-hint">
			Search by name, trust reference number or companies house number
		</label>

	</fieldset>
</div>

<div id="autocomplete-container"></div>
<div class="ccms-loader govuk-!-display-none"></div>
<ul class="autocomplete__menu autocomplete__menu--inline autocomplete__menu--hidden" id="search__listbox" role="listbox">
	<li class="autocomplete__option autocomplete__option--no-results">No results found.</li>
</ul>
<input type="hidden" id="selectedTrustUkprn" name="selectedTrustUkprn" required />

@*<script type="application/javascript" nonce="@nonce">
    $(document).ready(function () {

         $(document).ajaxStart(function() {
            showLoader();
        })
         $(document).ajaxStop(function() {
            hideLoader();
        })


        const autocompleteContainer = document.getElementById("autocomplete-container");
        const input = $("#search");
        let trustSearchResults = undefined;
        let selectedTrustUkprn = undefined;
        //const trustUkprn = trustSearchResults.find(trust => trust.displayName === selected).ukPrn;

        function searchForTrusts(queryStr, populateResults) {
            trustSearchResults = undefined;
            selectedTrustUkprn = undefined;
            $.get("trust/TrustsSearchResult", { searchQuery: queryStr })
                .done(function (trusts) {
                    if (trusts !== undefined) {
                        trustSearchResults = trusts;
                        populateResults(trusts.map(x => x.displayName));
                    }
                    else {
                        trustSearchResults = undefined;
                        populateResults();
                    }
                });
        }

        accessibleAutocomplete({
            element: autocompleteContainer, // this should be something else
            id: "trustSearch",
            name: "trustSearch",
            source: searchForTrusts,
            confirmOnBlur: false,
            minLength: 3,
            showNoOptonsFound: true,
            onConfirm: (selected) => {
                selectedTrustUkprn = trustSearchResults === undefined ? undefined : trustSearchResults.find(trust => trust.displayName === selected).ukPrn;
                $('#selectedTrustUkprn').val(selectedTrustUkprn);
            }
        });
    });

</script>*@