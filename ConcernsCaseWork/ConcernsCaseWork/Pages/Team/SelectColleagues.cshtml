@page "/team/selectColleagues"
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NetEscapades.AspNetCore.SecurityHeaders
@model ConcernsCaseWork.Pages.Team.SelectColleaguesPageModel

@{
    ViewData["Title"] = "Select colleagues";
    var nonce = HttpContext.GetNonce();

    var errorBannerClass = string.Empty;

    var inputErrorClass = string.Empty;

    TempData["selectedColleagues"] = (string[])Model.SelectedColleagues;
}

<div class="govuk-width-container">
	<partial name="_BannerError"/>

	<div class="govuk-grid-row">
		<div class="govuk-grid-column-two-thirds">			
			
			@if (!string.IsNullOrEmpty((string)TempData.Peek("Error.Message")))
            {
                <partial name="_Error"/>
            }
            else
            {
                <form asp-page-handler="selectColleagues" method="post" id="edit-selected-colleagues-form" novalidate>
                    <div class="govuk-form-group">

                            @{
                                if (Model.IsSelectTeamCaseWorkRedesignEnabled)
                                {
                                    <h1 class="govuk-heading-l">Select Case owners</h1>
                                    <div class="govuk-hint">Find and select the case owner's name or email address to see their open cases. You can add as many case owners as you like.</div>

                                    <div class="govuk-form-group @errorBannerClass" id="container-SelectedCaseOwner">
                                       
                                        @* <partial name="Components/_ValidationErrorDetail" model="@errors" /> *@

                                        <label for="case-owner-input" class="govuk-visually-hidden">Enter the email address of the person you want to assign the case to</label>
                                        <div id="autocomplete-container" class="@inputErrorClass"></div>

                                        <input type="hidden" id="selected-colleagues" name="SelectedColleagues" value="@Model.SelectedColleagues" />
                                    </div>

                                    <div id="selected-colleagues-container">
                                        <partial name="_SelectedColleagues" model="Model.SelectedColleagues" />
                                    </div>
                                }
                                else
                                {
                                <h1 class="govuk-heading-l">Select Colleagues to Show in Team Casework</h1>

                                    <fieldset class="govuk-fieldset" aria-describedby="user-hint">
                                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
                                            <h1 class="govuk-fieldset__heading">
                                                Colleagues
                                            </h1>
                                        </legend>
                                        <div id="user-hint" class="govuk-hint">
                                            Select which colleagues you wish to see casework for.
                                        </div>

                                    <h1 class="govuk-heading-l">
                                        Change case owner
                                    </h1>
                                    <div class="govuk-hint">Find and select the email address of the person you want to assign the case to</div>

                                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                                        @{
                                            var idUser = 0;
                                        }
                                        @foreach (var user in Model.Users)
                                        {
                                            <div class="govuk-checkboxes__item">
                                                @{
                                                    var idStr = idUser == 0 ? "user" : "user-" + idUser;
                                                    var checkedUser = Model.SelectedColleagues.Contains(user);
                                                }
                                                <input class="govuk-checkboxes__input" id="@idStr" name="SelectedColleagues" type="checkbox" value="@user" checked="@checkedUser">
                                                <label class="govuk-label govuk-checkboxes__label" for="@idStr">
                                                    @user
                                                </label>
                                            </div>
                                            idUser++;
                                        }
                                    </div>
                                    </fieldset>
                                }
                            }
                    </div>

                    <!--Button group-->
                    <div class="govuk-button-group">
                        <button data-prevent-double-click="true" class="govuk-button govuk-!-margin-top-6" data-module="govuk-button" data-testid="save">
                            Apply
                        </button>
                        <partial name="_Cancel" />
                    </div>
                </form>            
            }			
		</div>
	</div>
</div>

<script type="application/javascript" nonce="@nonce">
    $(document).ready(function () {
        let autocompleteContainer = document.getElementById('autocomplete-container');
        let results = null;

        let placeholderText = 'Enter a name or email address...';
        let multiplePlaceholderText = 'Enter another name or email address...';

        onPageMoved();

        function onPageMoved() {
            $('.user-remove').click(function (e){
                e.preventDefault();

                let colleague = $(this).attr('data-value');

                editColleagues('RemoveColleague', colleague);
            });
        }

        $.get('?handler=TeamList')
        .done((result) =>
        {
            accessibleAutocomplete({
                element: autocompleteContainer,
                id: "select-colleagues-input",
                name: "select-colleagues",
                defaultValue: "",
                placeholder: placeholderText,
                source: result,
                confirmOnBlur: false,
                autoselect: true,
                showNoOptonsFound: true,
                onConfirm: (selected) => {
                    editColleagues('SelectColleague', selected)

                    results = result;
                }
            });

        });

        function updateInputField() {

            let numOfColleagues = $('.user-colleagues-row').length;

            let colleaguesInput = $('#select-colleagues-input');

            colleaguesInput.val('');

            colleaguesInput.attr("placeholder", numOfColleagues > 0 ? multiplePlaceholderText : placeholderText);
        }

        function editColleagues(handler, colleague) {

            const url = '/team/selectcolleagues?handler=' + handler + '&colleague=' + colleague;

            $.get(url)
                .done(function (response) {
                    $("#selected-colleagues-container").html(response);
                    updateInputField();
                    onPageMoved();
                }); 
        }
    });
</script>