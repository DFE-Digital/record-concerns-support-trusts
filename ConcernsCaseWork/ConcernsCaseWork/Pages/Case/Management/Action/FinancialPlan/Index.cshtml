@page "/case/{urn:long}/management/action/financialplan/{financialPlanId:long}/{handler?}"
@model ConcernsCaseWork.Pages.Case.Management.Action.FinancialPlan.IndexPageModel

@using ConcernsCaseWork.Helpers;
@using ConcernsCaseWork.Extensions;
@using ConcernsCaseWork.Enums;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NetEscapades.AspNetCore.SecurityHeaders

@{
    ViewData["Title"] = "Financial Plan";
    var nonce = HttpContext.GetNonce();
}

<div class="govuk-width-container">
    <back-link url="@Model.BackLink.Url" label="@Model.BackLink.Label"></back-link>
</div>

<div class="govuk-width-container">
    <partial name="_BannerError" />

    @if (!string.IsNullOrEmpty((string)TempData.Peek("Error.Message")))
    {
        <partial name="_Error" />
    }
    else
    {

        <h1 class="govuk-heading-l">
            <span class="govuk-caption-m">Case ID @RouteData.Values["urn"]</span>
            Financial plan
        </h1>

        <div class="govuk-hint" id="financial-plan-hint">
            <a target="_blank" href="https://educationgovuk.sharepoint.com/sites/lveefa00003/SitePages/Trust%20financial%20plans.aspx" class="govuk-link" rel="noreferrer noopener">
                SFSO Knowledge: Financial plan
            </a>
        </div>

        <table class="govuk-table">
            <tbody class="govuk-table__body">

                @* Date opened *@
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header govuk-table__header__width_15">Date financial plan opened</th>
                    <td class="govuk-table__cell" data-testid="date-opened">
                        @{
                            RenderValue(DateTimeHelper.ParseToDisplayDate(Model.FinancialPlanModel.CreatedAt));
                        }
                    </td>
                </tr>


                @* Status *@
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header govuk-table__header__width_15">Current status</th>
                    <td class="govuk-table__cell" data-testid="status-text">
                        @{

                            if (Model.FinancialPlanModel.Status != null)
                            {

                                var statusName = Model.FinancialPlanModel.Status.Name;
                                var statusEnum = (FinancialPlanStatus)@Enum.Parse(typeof(FinancialPlanStatus), statusName);

                                <span>@EnumHelper.GetEnumDescription(statusEnum)</span>
                            }
                            else
                            {
                                <span>In progress</span>
                            }
                        }
                    </td>
                </tr>

                @* Date plan requested *@
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header govuk-table__header__width_15">Date financial plan requested</th>
                    <td class="govuk-table__cell" data-testid="date-plan-requested-text">
                        @{
                            if (Model.FinancialPlanModel.DatePlanRequested.HasValue)
                            {
                                RenderValue(DateTimeHelper.ParseToDisplayDate(Model.FinancialPlanModel.DatePlanRequested));
                            }
                            else
                            {
                                RenderEmptyLabel();
                            }
                        }
                    </td>
                </tr>

                @* Notes *@
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header govuk-table__header__width_15">Notes (optional)</th>
                    <td class="govuk-table__cell" data-testid="notes-text">
                        @{
                            if (!string.IsNullOrEmpty(Model.FinancialPlanModel.Notes))
                            {
                                <span class="dfe-text-area-display">@Model.FinancialPlanModel.Notes</span>
                            }
                            else
                            {
                                RenderEmptyLabel();
                            }
                        }
                    </td>
                </tr>
                @if (Model.FinancialPlanModel.IsEditable)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header govuk-table__header__width_15">Action</th>
                        <td class="govuk-table__cell">
                            <a class="govuk-link" href="@Request.Path/edit" id="edit-financialplan-button">
                                Edit information
                                <span class="govuk-visually-hidden">action</span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        if (Model.FinancialPlanModel.IsEditable)
        {
            <div class="govuk-button-group">
                <a data-prevent-double-click="true" asp-page-handler="Close" class="govuk-button" data-module="govuk-button" role="button" data-testid="close-financialplan-button">
                    Continue to record closure details
                </a>
            </div>
        }
    }
</div>

@functions {
    private void RenderValue<T>(T value)
    {
        if (IsEmpty(value))
        {
            RenderEmptyLabel();
        }
        else
        {
            @value
        }
    }

    private bool IsEmpty<T>(T value)
    {
        if (value is string)
        {
            return string.IsNullOrWhiteSpace(value as string);
        }

        return value == null || value.Equals(default(T));
    }

    private void RenderEmptyLabel()
    {
        <span class="govuk-tag ragtag ragtag__grey">Empty</span>
    }
}