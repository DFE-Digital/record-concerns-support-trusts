@page "/case/{urn:long}/management/action/srma/{srmaId:long}/{handler?}"
@model ConcernsCaseWork.Pages.Case.Management.Action.SRMA.IndexPageModel

@using ConcernsCaseWork.Helpers;
@using ConcernsCaseWork.Extensions;
@using Microsoft.AspNetCore.Mvc.TagHelpers

@{
	ViewData["Title"] = "SRMA";
	ViewData["BackButtonLabel"] = "Back to case";
	ViewData["BackButtonLink"] = $"/case/{Model.CaseUrn}/management";

	var errorClass = "govuk-error-message";
	var srmaValidationErrors = TempData["SRMA.Message"] as IEnumerable<string>;

	var reasonError = false;
	var dateAcceptedError = false;
	var dateVisitError = false;
	var dateReportSentError = false;
}

@section BeforeMain {
	<div class="govuk-width-container">
		<partial name="_BackLink"/>
	</div>
}

<div class="govuk-width-container">
	<partial name="_BannerError" />

	@if (!string.IsNullOrEmpty((string)TempData.Peek("Error.Message")))
	{
		<partial name="_Error" />
	}
	else
	{

		@if (TempData["SRMA.Message"] != null)
		{
			reasonError = srmaValidationErrors.Contains(Model.ReasonErrorMessage);
			dateAcceptedError = srmaValidationErrors.Contains(Model.DateAcceptedErrorMessage);
			dateVisitError = srmaValidationErrors.Contains(Model.DateVisitErrorMessage);
			dateReportSentError = srmaValidationErrors.Contains(Model.DateReportErrorMessage);

			<div tabindex="-1" role="group" id="errorSummary" class="govuk-error-summary" data-module="error-summary" aria-labelledby="errorSummary-heading">
				<h2 id="error-summary-title" class="govuk-error-summary__title">There is a problem</h2>
				<div class="govuk-error-summary__body">
					<ul class="govuk-list govuk-error-summary__list">
						@foreach (var msg in srmaValidationErrors)
						{
							<li class="govuk-error-message">@msg</li>
						}
					</ul>
				</div>
			</div>
		}

		<h1 class="govuk-heading-l">
			<span class="govuk-caption-m">Case ID @Model.SRMAModel.CaseUrn</span>
			School Resource Management Adviser (SRMA)
		</h1>

		<table class="govuk-table">
			<caption class="govuk-table__caption govuk-table__caption--m"></caption>
			<thead>
				<tr>
					<th scope="col"></th>
					<th scope="col"></th>
					<th scope="col"></th>
				</tr>
			</thead>
			<tbody class="govuk-table__body">

				@* Status *@
				<tr class="govuk-table__row">
					<th scope="row" class="govuk-table-case-details__header">Status</th>
					<td class="govuk-table__cell">
						@{
							var statusStr = Model.SRMAModel.Status == Enums.SRMAStatus.Unknown ? string.Empty
							: @EnumHelper.GetEnumDescription(Model.SRMAModel.Status);
							RenderValue(statusStr);
						}
					</td>
					<td class="govuk-table__cell govuk-table__header__right">
						@{
							RenderLink(Model.SRMAModel.Status, "SRMA status", $@"{Request.Path}\status");
						}
					</td>
				</tr>

				@* Date offered *@
				<tr class="govuk-table__row">
					<th scope="row" class="govuk-table-case-details__header">Date trust was contacted</th>
					<td class="govuk-table__cell">
						@{
							RenderValue(DateExtension.ToDayMonthYear(Model.SRMAModel.DateOffered));
						}
					</td>
					<td class="govuk-table__cell govuk-table__header__right">
						@{
							RenderLink(Model.SRMAModel.DateOffered, "date trust was contacted about SRMA", $@"{Request.Path}\offeredDate");
						}
					</td>
				</tr>

				@* Reason *@
				<tr class="govuk-table__row">
					<th scope="row" class="govuk-table-case-details__header">
						<span class="@(reasonError ? errorClass : "")">Reason</span></th>
					<td class="govuk-table__cell">
						@{
							var reasonStr = Model.SRMAModel.Reason == Enums.SRMAReasonOffered.Unknown ? string.Empty
							: @EnumHelper.GetEnumDescription(Model.SRMAModel.Reason);

							RenderValue(reasonStr);
						}
					</td>
					<td class="govuk-table__cell govuk-table__header__right">
						@{
							RenderLink(Model.SRMAModel.Reason, "SRMA reason", $@"{Request.Path}\reason");
						}
					</td>
				</tr>

				@* Date accepted *@
				<tr class="govuk-table__row">
					<th scope="row" class="govuk-table-case-details__header">
						<span class="@(dateAcceptedError ? errorClass : "")">Date accepted</span>
					</th>
					<td class="govuk-table__cell">
						@{
							if (Model.SRMAModel.DateAccepted.HasValue)
							{
								RenderValue(DateExtension.ToDayMonthYearWithDefault(Model.SRMAModel.DateAccepted.Value));
							}
							else
							{
								RenderEmptyLabel();
							}
						}
					</td>
					<td class="govuk-table__cell govuk-table__header__right">
						@{
							RenderLink(Model.SRMAModel.DateAccepted, "SRMA date accepted", $@"{Request.Path}\dateaccepted");
						}
					</td>
				</tr>

				@* Dates of visit *@
				<tr class="govuk-table__row">
					<th scope="row" class="govuk-table-case-details__header">
						<span class="@(dateVisitError ? errorClass : "")">Dates of visit</span>
					</th>
					<td class="govuk-table__cell">
						@{
							if (IsEmpty(Model.SRMAModel.DateVisitStart))
							{
								RenderEmptyLabel();
							}
							else
							{
								@DateExtension.ToDayMonthYear(Model.SRMAModel.DateVisitStart.Value)
								if (!IsEmpty(Model.SRMAModel.DateVisitEnd))
								{
									<text> - </text>
									@DateExtension.ToDayMonthYear(Model.SRMAModel.DateVisitEnd.Value)
								}
							}
						}
					</td>
					<td class="govuk-table__cell govuk-table__header__right">
						@{
							RenderLink(Model.SRMAModel.DateVisitStart, "SRMA dates of visit", $@"{Request.Path}\visitdates");
						}
					</td>
				</tr>


				@* Date report sent *@
				<tr class="govuk-table__row">
					<th scope="row" class="govuk-table-case-details__header">
						<span class="@(dateReportSentError ? errorClass : "")">Date report sent to trust</span>
					</th>
					<td class="govuk-table__cell">
						@{
							if (Model.SRMAModel.DateReportSentToTrust.HasValue)
							{
								RenderValue(DateExtension.ToDayMonthYearWithDefault(Model.SRMAModel.DateReportSentToTrust.Value));
							}
							else
							{
								RenderEmptyLabel();
							}
						}
					</td>
					<td class="govuk-table__cell govuk-table__header__right">
						@{
							RenderLink(Model.SRMAModel.DateReportSentToTrust, "date SRMA report sent to trust", $@"{Request.Path}\datereportsent");
						}
					</td>
				</tr>

				@* Notes *@
				<tr class="govuk-table__row">
					<th scope="row" class="govuk-table-case-details__header">Notes</th>
					<td class="govuk-table__cell">
						@{
							RenderValue(Model.SRMAModel.Notes);
						}
					</td>
					<td class="govuk-table__cell govuk-table__header__right">
						@{
							RenderLink(Model.SRMAModel.Notes, "SRMA notes", $@"{Request.Path}\notes");
						}
					</td>
				</tr>
			</tbody>
		</table>

		<div class="govuk-button-group">
			<a data-prevent-double-click="true" asp-page-handler="DeclineComplete" class="govuk-button govuk-button--secondary" data-module="govuk-button" role="button" id="complete-decline-srma-button">
				@Model.DeclineCompleteButtonLabel
			</a>
			<a data-prevent-double-click="true" asp-page-handler="Cancel" class="govuk-button govuk-button--secondary" data-module="govuk-button" role="button" data-testid="cancel-srma-button">
				SRMA cancelled
			</a>
		</div>
	}
</div>

@functions {
    private void RenderValue<T>(T value)
    {
        if (IsEmpty(value))
        {
            RenderEmptyLabel();
        }
        else
        {
            @value
        }
    }

    private void RenderLink<T>(T value, string fieldName, string url)
    {
	    var ariaLabel = "Change " + fieldName;
        <a class="govuk-link" href="@url" aria-label="@ariaLabel" data-testid="@fieldName">
            @(IsEmpty(value) ? "Add" : "Edit")
            <span class="govuk-visually-hidden">@fieldName</span>
        </a>
    }

    private bool IsEmpty<T>(T value)
    {
        if (value is string)
        {
            return string.IsNullOrWhiteSpace(value as string);
        }

        return value == null || value.Equals(default(T));
    }

    private void RenderEmptyLabel()
    {
        <span class="govuk-tag ragtag ragtag__grey">Empty</span>
    }
}