services:     
   recast.sqldb:
    image: mcr.microsoft.com/azure-sql-edge:latest
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: mySuperStrong_pa55word!!!
    ports:
      - "1433:1433"
    networks:
      - local-dev
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U sa -P mySuperStrong_pa55word!!! -C -Q 'SELECT 1' || exit 1
      interval: 2s
      retries: 10
    restart: always
    
   recast.redis:
    image: redis:latest
    restart: always
    ports:
     - "6379:6379"
    networks:
      - local-dev

   recastsqldb.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./init:/initdb.d
    networks:
      - local-dev
    depends_on:
      recast.sqldb:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools18/bin/sqlcmd -S recast.sqldb -U sa -P mySuperStrong_pa55word!!! -C -d master -i initdb.d/init-sqldatabase.sql;
      echo "All done!";
      '

   dfe.recast.datamigration: 
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=Server=host.docker.internal,1433;Database=recastsqldb;User Id=sa;Password=mySuperStrong_pa55word!!!;TrustServerCertificate=True
    build:
        context: ../ConcernsCaseWork
        dockerfile: ConcernsCaseWork.Data/Dockerfile
    depends_on:
         recastsqldb.configurator:
            condition: service_completed_successfully
    networks:
      - local-dev
    
      
networks:
  local-dev:
    
