# Stage 1
ARG ASPNET_IMAGE_TAG=6.0.9-bullseye-slim
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /build

ENV DEBIAN_FRONTEND=noninteractive

COPY ./ConcernsCaseWork/ConcernsCaseWork/ ./ConcernsCaseWork/
COPY ./ConcernsCaseWork/ConcernsCaseWork.API/ ./ConcernsCaseWork.API/
COPY ./ConcernsCaseWork/ConcernsCaseWork.CoreTypes/ ./ConcernsCaseWork.CoreTypes/
COPY ./ConcernsCaseWork/ConcernsCaseWork.Data/ ./ConcernsCaseWork.Data/
COPY ./ConcernsCaseWork/ConcernsCaseWork.Logging/ ./ConcernsCaseWork.Logging/
COPY ./ConcernsCaseWork/ConcernsCaseWork.Service/ ./ConcernsCaseWork.Service/
COPY ./ConcernsCaseWork/ConcernsCaseWork.Redis ./ConcernsCaseWork.Redis
COPY ./ConcernsCaseWork/ConcernsCaseWork.sln ./ConcernsCaseWork.sln

RUN dotnet restore ConcernsCaseWork
RUN dotnet build ConcernsCaseWork

RUN dotnet new tool-manifest
RUN dotnet tool install dotnet-ef

RUN mkdir -p /app/SQL
RUN dotnet ef migrations script --output /app/SQL/DbMigrationScript.sql --idempotent -p /build/ConcernsCaseWork.Data
RUN touch /app/SQL/DbMigrationScript.sql

RUN dotnet publish ConcernsCaseWork -c Release -o /app

COPY ./script/web-docker-entrypoint.sh /app/docker-entrypoint.sh

# Stage 2
ARG ASPNET_IMAGE_TAG
FROM "mcr.microsoft.com/dotnet/aspnet:${ASPNET_IMAGE_TAG}" AS final

RUN apt-get update
RUN apt-get install unixodbc curl gnupg -y
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN curl https://packages.microsoft.com/config/debian/11/prod.list | tee /etc/apt/sources.list.d/msprod.list
RUN apt-get update
RUN ACCEPT_EULA=Y apt-get install msodbcsql18 mssql-tools18 -y

COPY --from=build /app /app
WORKDIR /app
RUN chmod +x ./docker-entrypoint.sh
EXPOSE 80/tcp
